{"timestamp": 1698744583.1045, "stored_source_code": "# add default values for parameters here\n# SPAM errors\n## Introduction\nState Preparation And Measurement (SPAM) errors were introduced in the introductory tutorial [Simulating sequences with errors and noises](noisy_sim.nblink). They will be further detailed in this notebook. We recommend you to check the introductory tutorial before going through this one.\n\nSPAM errors can be:\n\n- A state preparation error (with probability \u03b7 for each atom), where an atom is not correctly pumped to the ground state at the beginning, making it effectively unavailable throughout the sequence.\n- Measurement errors which are linked to the incorrect identification of the final state of the atoms: during the imaging process, excited rydberg atoms in $\\ket{r}$ might decay to the state $\\ket{g}$, allowing them to be trapped in the tweezers. This produces false negatives with rate $\\epsilon'$. \n- On the contrary, some atoms in the ground state $\\ket{g}$ might be kicked out for various reasons (e.g. collisions with residual gas in the chamber) and tweezers recapture might fail, inferring them incorrectly as atoms in the excited state $\\ket{r}$ - those are the false positives that happen with rate $\\epsilon$.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport qutip\n\nfrom pulser import Register, Pulse, Sequence\nfrom pulser_simulation import SimConfig, QutipEmulator\nfrom pulser.devices import Chadoq2\n## Single atom noisy simulations\n### Sequence preparation\nWe prepare a single atom.\nreg = Register.from_coordinates([(0, 0)], prefix=\"q\")\nWe act on this atom with a Constant Pulse, such that it oscillates between the ground state and excited Rydberg state (Rabi oscillations):\nseq = Sequence(reg, Chadoq2)\nseq.declare_channel(\"channel 0\", \"rydberg_global\")\nduration = 2500\npulse = Pulse.ConstantPulse(duration, 2 * np.pi, 0.0, 0.0)\nseq.add(pulse, \"channel 0\")\nseq.draw()\nWe now create the simulation object and an observable which describes the excited state population.\nsim = QutipEmulator.from_sequence(seq, sampling_rate=0.05)\nobs = qutip.basis(2, 0).proj()\n## SPAM effects\nIn this part we compare noiseless and noisy simulations for the default SPAM parameters (taken from [De L\u00e9s\u00e9leuc, et al., 2018](https://arxiv.org/abs/1802.10424))\n# SPAM configuration\nconfig_spam = SimConfig(noise=(\"SPAM\"), runs=30, samples_per_run=5)\n\n# Integration of the SPAM noise configuration to the simulation\nsim.set_config(config_spam)\nsim.show_config()\n\n# Simulation storing 40% of the results:\nsim.set_evaluation_times(0.4)\nres_spam = sim.run()\nres_spam.plot(obs, label=\"With SPAM errors\")\n\n# Noiseless simulation:\nsim.reset_config()\nres_clean = sim.run()\nres_clean.plot(obs, label=\"Noiseless simulation\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=\"upper left\", borderaxespad=0.0)\nplt.ylabel(\"Excited state population\")\nplt.show()\nLet's modify the *SPAM* dictionary to increase the state preparation error rate ($\\eta=40$%).\nconfig_spam_mod = SimConfig(noise=(\"SPAM\"), eta=0.4, runs=100)\nsim.set_config(config_spam_mod)\nsim.set_evaluation_times(0.5)\nres_large_eta = sim.run()\n\nplt.figure()\nplt.ylim(0, 1)\nplt.axhline(\n    1 - config_spam_mod.eta, color=\"black\", linestyle=\"--\", label=r\"1 - $\\eta$\"\n)\nres_large_eta.plot(obs, label=\"With SPAM errors\")\nres_clean.plot(obs, label=\"Noiseless simulation\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=\"upper left\", borderaxespad=0.0)\nplt.ylabel(\"Excited state population\")\nplt.show()\nWe can observe here that the population doesn't go above $0.6 = 1 - \\eta$, which is to be expected: badly prepared atoms are not used at all in the simulations. The more runs we perform, the closer the maximum population will be to $0.6$.\n## Changing $\\eta$\nFirst, we reset all SPAM errors values to $0$. Then, we do a sweep over the parameter $\\eta$ to see how it modifies the simulation results.\nres_clean.plot(obs)\nfor eta in np.linspace(0, 0.99, 4):\n    config_spam_eta = SimConfig(\n        noise=\"SPAM\", eta=eta, runs=50, epsilon=0, epsilon_prime=0\n    )\n    sim.set_config(config_spam_eta)\n    sim.run().plot(obs, label=rf\"$\\eta$ = {eta}\")\nplt.legend(bbox_to_anchor=(1.01, 1), loc=\"upper left\", borderaxespad=0.0)\nplt.ylabel(\"Excited state population\")\nplt.show()\nAs $\\eta$ grows, more atoms are badly prepared (i.e, pumped into a state different from $\\ket{g}$) and so less atoms are excited into the Rydberg state. You can increase the number of runs to smooth the curves.\n### Changing $\\epsilon$ and $\\epsilon'$\nLet's now compare sweeps over $\\epsilon$ and $\\epsilon'$ side by side:\nres_clean.plot(obs, label=\"Noiseless simulation\")\nfor eps in np.linspace(0, 0.99, 4):\n    config_spam_eps = SimConfig(\n        noise=\"SPAM\", eta=1e-8, runs=50, epsilon=eps, epsilon_prime=0\n    )\n    sim.set_config(config_spam_eps)\n    sim.run().plot(obs, label=rf\"$\\epsilon$ = {eps}\")\nplt.legend(bbox_to_anchor=(1.01, 1), loc=\"upper left\", borderaxespad=0.0)\nplt.ylabel(\"Excited state population\")\nplt.show()\nWhen we increase the proportion of false positives, the percentage of atoms in the excited state increases as expected. Note that when $\\eta=0$, the results object we obtain is a `CoherentResults` rather than a `NoisyResults`. This is because state preparation errors require you to sample a probability distribution to obtain the atoms that were badly prepared (thus forcing you to use `NoisyResults`), while measurement errors can be applied coherently to a state vector or density matrix.\nFinally, we sweep over the $\\epsilon '$ values:\nres_clean.plot(obs, label=\"Noiseless simulation\")\nfor eps_p in np.linspace(0, 0.99, 4):\n    config_spam_eps_p = SimConfig(\n        noise=\"SPAM\", eta=1e-8, runs=50, epsilon=0, epsilon_prime=eps_p\n    )\n    sim.set_config(config_spam_eps_p)\n    sim.run().plot(obs, label=rf\"$\\epsilon$' = {eps_p}\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=\"upper left\", borderaxespad=0.0)\nplt.ylabel(\"Excited state population\")\nplt.show()\nIn contrast to the previous case, when the number of false negatives increases, the system behaves as if all atoms are in the ground state leading to zero population in the excited state.", "params": {}}